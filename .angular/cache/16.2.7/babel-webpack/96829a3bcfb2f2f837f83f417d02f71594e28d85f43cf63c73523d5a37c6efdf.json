{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let VerifyLoginOtpComponent = class VerifyLoginOtpComponent {\n  constructor(_forms, _router, _authService, _route) {\n    this._forms = _forms;\n    this._router = _router;\n    this._authService = _authService;\n    this._route = _route;\n    this.error = \"\";\n    this._route.paramMap.subscribe(params => {\n      this.param = params.get('id');\n    });\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4), Validators.required]))\n    });\n  }\n  verifyOtp() {\n    this._authService.verifyOtp(this.formOtp.value).subscribe(result => {\n      console.log(result);\n      let response = result;\n      if (response.message == \"success\") {\n        this._router.navigate(['reset_password']);\n      } else {\n        this.error = \"something went wrong\";\n        this._router.navigate(['auth/login.password']);\n      }\n    });\n  }\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password']);\n  }\n};\nVerifyLoginOtpComponent = __decorate([Component({\n  selector: 'app-verify-login-otp',\n  templateUrl: './verify-login-otp.component.html',\n  styleUrls: ['./verify-login-otp.component.css']\n})], VerifyLoginOtpComponent);","map":{"version":3,"names":["Component","Validators","VerifyLoginOtpComponent","constructor","_forms","_router","_authService","_route","error","paramMap","subscribe","params","param","get","formOtp","group","otp","control","compose","minLength","maxLength","required","verifyOtp","value","result","console","log","response","message","navigate","navigateToLoginWithPassword","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\verify-login-otp\\verify-login-otp.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-verify-login-otp',\n  templateUrl: './verify-login-otp.component.html',\n  styleUrls: ['./verify-login-otp.component.css']\n})\nexport class VerifyLoginOtpComponent {\n  formOtp:FormGroup;\n  error:string = \"\";\n  constructor(private _forms:FormBuilder, private _router:Router, private _authService:AuthService, private _route){\n\n    this._route.paramMap.subscribe(params=>{\n      this.param = params.get('id')\n  })\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4),Validators.required])),\n    })\n  }\n  verifyOtp(){\n    this._authService.verifyOtp(this.formOtp.value).subscribe((result: any) => {\n      console.log(result);\n      let response = result;\n      if (response.message == \"success\") {\n          this._router.navigate(['reset_password'])\n        } else {\n          this.error = \"something went wrong\"\n          this._router.navigate(['auth/login.password']);\n        }\n    })\n  }\n\n  \n  navigateToLoginWithPassword(){\n    this._router.navigate(['auth/login.password'])\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAS5D,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAGlCC,YAAoBC,MAAkB,EAAUC,OAAc,EAAUC,YAAwB,EAAUC,MAAM;IAA5F,KAAAH,MAAM,GAANA,MAAM;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAAiB,KAAAC,YAAY,GAAZA,YAAY;IAAsB,KAAAC,MAAM,GAANA,MAAM;IADhH,KAAAC,KAAK,GAAU,EAAE;IAGf,IAAI,CAACD,MAAM,CAACE,QAAQ,CAACC,SAAS,CAACC,MAAM,IAAE;MACrC,IAAI,CAACC,KAAK,GAAGD,MAAM,CAACE,GAAG,CAAC,IAAI,CAAC;IACjC,CAAC,CAAC;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACV,MAAM,CAACW,KAAK,CAAC;MAC/BC,GAAG,EAAE,IAAI,CAACZ,MAAM,CAACa,OAAO,CAAC,EAAE,EAAEhB,UAAU,CAACiB,OAAO,CAAC,CAACjB,UAAU,CAACkB,SAAS,CAAC,CAAC,CAAC,EAAElB,UAAU,CAACmB,SAAS,CAAC,CAAC,CAAC,EAACnB,UAAU,CAACoB,QAAQ,CAAC,CAAC;KACxH,CAAC;EACJ;EACAC,SAASA,CAAA;IACP,IAAI,CAAChB,YAAY,CAACgB,SAAS,CAAC,IAAI,CAACR,OAAO,CAACS,KAAK,CAAC,CAACb,SAAS,CAAEc,MAAW,IAAI;MACxEC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,IAAIG,QAAQ,GAAGH,MAAM;MACrB,IAAIG,QAAQ,CAACC,OAAO,IAAI,SAAS,EAAE;QAC/B,IAAI,CAACvB,OAAO,CAACwB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;OAC1C,MAAM;QACL,IAAI,CAACrB,KAAK,GAAG,sBAAsB;QACnC,IAAI,CAACH,OAAO,CAACwB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;;IAEpD,CAAC,CAAC;EACJ;EAGAC,2BAA2BA,CAAA;IACzB,IAAI,CAACzB,OAAO,CAACwB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;EAChD;CACD;AA7BY3B,uBAAuB,GAAA6B,UAAA,EALnC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACWhC,uBAAuB,CA6BnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}