{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction LoginComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*Phone number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*Enter valid phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*Enter a valid Phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(_router, _formlogin) {\n    this._router = _router;\n    this._formlogin = _formlogin;\n    this.otpLoginForm = this._formlogin.group({\n      phone: this._formlogin.control(\"\", Validators.compose([Validators.required, Validators.pattern(/^\\d{10}$/), Validators.minLength(10)]))\n    });\n  }\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password']);\n  }\n  sendOtp() {}\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"flex\", \"justify-center\", \"md:justify-start\", \"pt-12\", \"md:pl-12\", \"md:-mb-24\"], [\"href\", \"#\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-xl\", \"p-4\"], [1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"pt-8\", \"md:mt-16\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"pt-3\", \"md:pt-8\", 3, \"formGroup\", \"submit\"], [1, \"flex\", \"flex-col\", \"pt-4\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Phone\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger ps-2\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Send OTP\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-8\"], [1, \"text-center\", \"pt-3\", \"pb-6\"], [1, \"underline\", \"font-semibold\", 3, \"click\"], [1, \"text-danger\", \"ps-2\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"TripSync\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"p\", 3);\n        i0.ɵɵtext(5, \"Welcome Back!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_6_listener() {\n          return ctx.sendOtp();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, LoginComponent_span_11_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(13, LoginComponent_span_13_Template, 2, 0, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"p\");\n        i0.ɵɵtext(17, \"Login with password? \");\n        i0.ɵɵelementStart(18, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_a_click_18_listener() {\n          return ctx.navigateToLoginWithPassword();\n        });\n        i0.ɵɵtext(19, \"Log in here.\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.otpLoginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpLoginForm.hasError(\"required\", \"phone\") && ctx.otpLoginForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpLoginForm.hasError(\"pattern\", \"phone\") && ctx.otpLoginForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.otpLoginForm.hasError(\"minLength\", \"phone\") && ctx.otpLoginForm.controls[\"phone\"].dirty);\n      }\n    },\n    dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","_router","_formlogin","otpLoginForm","group","phone","control","compose","required","pattern","minLength","navigateToLoginWithPassword","navigate","sendOtp","_","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_submit_6_listener","ɵɵelement","ɵɵtemplate","LoginComponent_span_11_Template","LoginComponent_span_12_Template","LoginComponent_span_13_Template","LoginComponent_Template_a_click_18_listener","ɵɵadvance","ɵɵproperty","hasError","controls","dirty"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\login.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  otpLoginForm:FormGroup;\nconstructor(private _router:Router,private _formlogin:FormBuilder){\n  \n  this.otpLoginForm = this._formlogin.group({\n    phone: this._formlogin.control(\"\", Validators.compose([Validators.required,Validators.pattern(/^\\d{10}$/),Validators.minLength(10)])),\n  })\n}\n\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password'])\n  }\n\n  sendOtp(){\n\n  }\n}\n","\n\n<div class=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24 \">\n    <a href=\"#\" class=\"bg-black text-white font-bold text-xl p-4\">TripSync</a>\n</div>\n\n<div class=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:mt-16 md:pt-0 px-8 md:px-24 lg:px-32\">\n    <p class=\"text-center text-3xl\">Welcome Back!</p>\n    <form class=\"flex flex-col pt-3 md:pt-8\" [formGroup]=\"otpLoginForm\" (submit)=\"sendOtp()\">\n        <div class=\"flex flex-col pt-4\">\n            <label for=\"email\" class=\"text-lg\">Phone</label>\n            <input type=\"email\" id=\"email\" placeholder=\"Phone\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\">\n            <span *ngIf=\"otpLoginForm.hasError('required','phone') && otpLoginForm.controls['phone'].dirty\" class=\"text-danger ps-2\">*Phone number is required</span>\n            <span *ngIf=\"otpLoginForm.hasError('pattern','phone') && otpLoginForm.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter valid phone number</span>\n            <span *ngIf=\"otpLoginForm.hasError('minLength','phone') && otpLoginForm.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter a valid Phone number</span>\n        </div>\n        <input type=\"submit\" value=\"Send OTP\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\">\n    </form>\n    <div class=\"text-center pt-3 pb-6\">\n        <p>Login with password? <a (click)=\"navigateToLoginWithPassword()\" class=\"underline font-semibold\">Log in here.</a></p>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}