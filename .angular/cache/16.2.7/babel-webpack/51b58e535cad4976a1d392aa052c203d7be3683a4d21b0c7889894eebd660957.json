{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction VerifyLoginOtpComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*OTP is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyLoginOtpComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*Enter valid OTP\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction VerifyLoginOtpComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \"*Enter a valid OTP\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class VerifyLoginOtpComponent {\n  constructor() {\n    this.error = \"\";\n    this.param = \"\";\n    this.userdata = {\n      constructor(_forms, _router, _authService, _route) {\n        this._route.queryParams.subscribe(params => {\n          this.param = params['phone'];\n          console.log(\"vab\", this.param);\n        });\n        this.formOtp = this._forms.group({\n          otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4), Validators.required]))\n        });\n      },\n      verifyOtp() {\n        this._authService.verifyOtp(this.formOtp.value, this.param).subscribe(result => {\n          console.log(result);\n          let response = result;\n          this.userdata = result;\n          if (response.status === \"Success\") {\n            this._router.navigate(['reset_password']);\n          } else {\n            this.error = \"something went wrong\";\n            this._router.navigate(['auth/login.password']);\n          }\n        });\n      },\n      navigateToLoginWithPassword() {\n        this._router.navigate(['auth/login.password']);\n      }\n    };\n  }\n  static #_ = this.ɵfac = function VerifyLoginOtpComponent_Factory(t) {\n    return new (t || VerifyLoginOtpComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: VerifyLoginOtpComponent,\n    selectors: [[\"app-verify-login-otp\"]],\n    decls: 20,\n    vars: 4,\n    consts: [[1, \"flex\", \"justify-center\", \"md:justify-start\", \"pt-12\", \"md:pl-12\", \"md:-mb-24\"], [\"href\", \"#\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-xl\", \"p-4\"], [1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"pt-8\", \"md:mt-16\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"pt-3\", \"md:pt-8\", 3, \"formGroup\", \"submit\"], [1, \"flex\", \"flex-col\", \"pt-4\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"otp\", \"placeholder\", \"Phone\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger ps-2\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Send OTP\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-8\"], [1, \"text-center\", \"pt-3\", \"pb-6\"], [1, \"underline\", \"font-semibold\", 3, \"click\"], [1, \"text-danger\", \"ps-2\"]],\n    template: function VerifyLoginOtpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n        i0.ɵɵtext(2, \"TripSync\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"p\", 3);\n        i0.ɵɵtext(5, \"Verify OTP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function VerifyLoginOtpComponent_Template_form_submit_6_listener() {\n          return ctx.verifyOtp();\n        });\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, VerifyLoginOtpComponent_span_11_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(12, VerifyLoginOtpComponent_span_12_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(13, VerifyLoginOtpComponent_span_13_Template, 2, 0, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"p\");\n        i0.ɵɵtext(17, \"Login with password? \");\n        i0.ɵɵelementStart(18, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function VerifyLoginOtpComponent_Template_a_click_18_listener() {\n          return ctx.navigateToLoginWithPassword();\n        });\n        i0.ɵɵtext(19, \"Log in here.\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.formOtp);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"required\", \"otp\") && ctx.formOtp.controls[\"otp\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"maxLength\", \"otp\") && ctx.formOtp.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"minLength\", \"otp\") && ctx.formOtp.controls[\"phone\"].dirty);\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","VerifyLoginOtpComponent","constructor","error","param","userdata","_forms","_router","_authService","_route","queryParams","subscribe","params","console","log","formOtp","group","otp","control","compose","minLength","maxLength","required","verifyOtp","value","result","response","status","navigate","navigateToLoginWithPassword","_","_2","selectors","decls","vars","consts","template","VerifyLoginOtpComponent_Template","rf","ctx","ɵɵlistener","VerifyLoginOtpComponent_Template_form_submit_6_listener","ɵɵelement","ɵɵtemplate","VerifyLoginOtpComponent_span_11_Template","VerifyLoginOtpComponent_span_12_Template","VerifyLoginOtpComponent_span_13_Template","VerifyLoginOtpComponent_Template_a_click_18_listener","ɵɵadvance","ɵɵproperty","hasError","controls","dirty"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\verify-login-otp\\verify-login-otp.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\verify-login-otp\\verify-login-otp.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { verifyOtpResponse } from 'src/app/models/api.models';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-verify-login-otp',\n  templateUrl: './verify-login-otp.component.html',\n  styleUrls: ['./verify-login-otp.component.css']\n})\nexport class VerifyLoginOtpComponent {\n  formOtp:FormGroup;\n  error:string = \"\";\n  param:string | null = \"\";\n  userdata:verifyOtpResponse = {;\n  constructor(private _forms:FormBuilder, private _router:Router, private _authService:AuthService, private _route:ActivatedRoute){\n\n    this._route.queryParams.subscribe(params=>{\n      this.param = params['phone'];\n      console.log(\"vab\",this.param);\n  })\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4),Validators.required])),\n    })\n  }\n  verifyOtp(){\n   \n    this._authService.verifyOtp(this.formOtp.value,this.param).subscribe((result: any) => {\n      console.log(result);\n      let response = result;\n      this.userdata = result;\n      if (response.status === \"Success\") {\n          this._router.navigate(['reset_password'])\n        } else {\n          this.error = \"something went wrong\"\n          this._router.navigate(['auth/login.password']);\n        }\n    })\n  }\n\n  \n  navigateToLoginWithPassword(){\n    this._router.navigate(['auth/login.password'])\n  }\n}\n","\n\n<div class=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24 \">\n    <a href=\"#\" class=\"bg-black text-white font-bold text-xl p-4\">TripSync</a>\n</div>\n\n<div class=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:mt-16 md:pt-0 px-8 md:px-24 lg:px-32\">\n    <p class=\"text-center text-3xl\">Verify OTP</p>\n    <form class=\"flex flex-col pt-3 md:pt-8\" [formGroup]=\"formOtp\" (submit)=\"verifyOtp()\">\n        <div class=\"flex flex-col pt-4\">\n            <label for=\"email\" class=\"text-lg\">Phone</label>\n            <input type=\"email\" id=\"email\" formControlName=\"otp\" placeholder=\"Phone\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\">\n            <span *ngIf=\"formOtp.hasError('required','otp') && formOtp.controls['otp'].dirty\" class=\"text-danger ps-2\">*OTP is required</span>\n            <span *ngIf=\"formOtp.hasError('maxLength','otp') && formOtp.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter valid OTP</span>\n            <span *ngIf=\"formOtp.hasError('minLength','otp') && formOtp.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter a valid OTP</span>\n        </div>\n        <input type=\"submit\" value=\"Send OTP\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\">\n    </form>\n    <div class=\"text-center pt-3 pb-6\">\n        <p>Login with password? <a (click)=\"navigateToLoginWithPassword()\" class=\"underline font-semibold\">Log in here.</a></p>\n    </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}