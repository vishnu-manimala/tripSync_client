{"ast":null,"code":"export const confirmPasswordValidator = (controlName, controlNameToMatch) => {\n  return formGroup => {\n    let control = formGroup.controls[controlName];\n    let controlToMatch = formGroup.controls[controlNameToMatch];\n    if (control.value !== controlToMatch.value) {\n      controlToMatch.setErrors({\n        confirmPasswordValidator: true\n      });\n    } else {\n      controlToMatch.setErrors(null);\n    }\n  };\n};","map":{"version":3,"names":["confirmPasswordValidator","controlName","controlNameToMatch","formGroup","control","controls","controlToMatch","value","setErrors"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\validators\\confirm.password.validator.ts"],"sourcesContent":["import { FormGroup } from \"@angular/forms\"\r\n\r\nexport const confirmPasswordValidator = (controlName:string,controlNameToMatch:string)=>{\r\n   \r\n    return  (formGroup:FormGroup)=>{\r\n      \r\n        let control = formGroup.controls[controlName];\r\n        let controlToMatch = formGroup.controls[controlNameToMatch];\r\n        if(control.value !== controlToMatch.value){\r\n        \r\n            controlToMatch.setErrors({confirmPasswordValidator:true})\r\n        }else{\r\n            controlToMatch.setErrors(null);\r\n        }\r\n       \r\n    }\r\n  \r\n}"],"mappings":"AAEA,OAAO,MAAMA,wBAAwB,GAAGA,CAACC,WAAkB,EAACC,kBAAyB,KAAG;EAEpF,OAASC,SAAmB,IAAG;IAE3B,IAAIC,OAAO,GAAGD,SAAS,CAACE,QAAQ,CAACJ,WAAW,CAAC;IAC7C,IAAIK,cAAc,GAAGH,SAAS,CAACE,QAAQ,CAACH,kBAAkB,CAAC;IAC3D,IAAGE,OAAO,CAACG,KAAK,KAAKD,cAAc,CAACC,KAAK,EAAC;MAEtCD,cAAc,CAACE,SAAS,CAAC;QAACR,wBAAwB,EAAC;MAAI,CAAC,CAAC;KAC5D,MAAI;MACDM,cAAc,CAACE,SAAS,CAAC,IAAI,CAAC;;EAGtC,CAAC;AAEL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}