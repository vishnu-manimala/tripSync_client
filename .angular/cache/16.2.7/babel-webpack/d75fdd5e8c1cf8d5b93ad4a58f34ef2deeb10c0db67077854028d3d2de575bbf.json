{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddVehicleComponent {\n  constructor(_form) {\n    this._form = _form;\n    this.vehicleData = this._form.group({\n      type: this._form.control(\"\", Validators.required),\n      brand: this._form.control(\"\", Validators.required),\n      model: this._form.control(\"\", Validators.required),\n      year: this._form.control(\"\", Validators.required),\n      color: this._form.control(\"\", Validators.required)\n    });\n  }\n  onTypeValue() {\n    console.log(this.vehicleData.value.type);\n    this.vehicleService.getCarBrands(this.vehicleData.value.type).subscribe(result => {\n      this.brands = result;\n      console.log(\"types\", this.brands.Results);\n      this.brands.Results.forEach(element => {\n        console.log(\"carss\", element.MakeName);\n      });\n    });\n  }\n  static #_ = this.ɵfac = function AddVehicleComponent_Factory(t) {\n    return new (t || AddVehicleComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddVehicleComponent,\n    selectors: [[\"app-add-vehicle\"]],\n    decls: 31,\n    vars: 0,\n    consts: [[1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"mt-3\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\", \"w-11/12\", \"sm:w-full\", \"md:w-2/3\", \"text-cyan-300\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"md:pt-8\"], [1, \"flex\", \"flex-col\", \"pt-1\"], [\"for\", \"vechicleType\", 1, \"text-lg\"], [\"id\", \"vechicleType\", \"formControlName\", \"type\", \"placeholder\", \"John Smith\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"change\"], [\"value\", \"Car\"], [\"value\", \"Moto\"], [\"for\", \"phone\", 1, \"text-lg\"], [\"type\", \"number\", \"id\", \"phone\", \"formControlName\", \"phone\", \"placeholder\", \"Contact Number\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"your@email.com\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"confirm-password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"confirm-password\", \"formControlName\", \"confirm_password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-2\", \"rounded\"], [1, \"text-center\", \"text-red-950\"]],\n    template: function AddVehicleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Vehicle Details.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Vehicle Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 5);\n        i0.ɵɵlistener(\"change\", function AddVehicleComponent_Template_select_change_7_listener() {\n          return ctx.onTypeValue();\n        });\n        i0.ɵɵelementStart(8, \"option\", 6);\n        i0.ɵɵtext(9, \"Car\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 7);\n        i0.ɵɵtext(11, \"Two wheeler\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Contact number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 16);\n        i0.ɵɵelementStart(29, \"span\", 17);\n        i0.ɵɵtext(30, \"Something went wrong!!\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","AddVehicleComponent","constructor","_form","vehicleData","group","type","control","required","brand","model","year","color","onTypeValue","console","log","value","vehicleService","getCarBrands","subscribe","result","brands","Results","forEach","element","MakeName","_","i0","ɵɵdirectiveInject","i1","FormBuilder","_2","selectors","decls","vars","consts","template","AddVehicleComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AddVehicleComponent_Template_select_change_7_listener","ɵɵelement"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\user\\vehicles\\add-vehicle\\add-vehicle.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\user\\vehicles\\add-vehicle\\add-vehicle.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})\nexport class AddVehicleComponent {\n  vehicleData:FormGroup;\n  constructor(private _form:FormBuilder){\n    \n    this.vehicleData = this._form.group({\n      type: this._form.control(\"\", Validators.required),\n      brand: this._form.control(\"\", Validators.required),\n      model: this._form.control(\"\", Validators.required),\n      year: this._form.control(\"\", Validators.required),\n      color: this._form.control(\"\", Validators.required)\n    })\n  }\n  onTypeValue(){\n    console.log(this.vehicleData.value.type);\n    this.vehicleService.getCarBrands(this.vehicleData.value.type).subscribe(result=>{\n      this.brands = result\n      console.log(\"types\",this.brands.Results);\n      this.brands.Results.forEach((element:any) => {\n        console.log(\"carss\",element.MakeName)\n      });\n    })\n  }\n}\n","<div class=\"flex flex-col justify-center md:justify-start my-auto mt-3 md:pt-0 px-8 md:px-24 lg:px-32 w-11/12 sm:w-full md:w-2/3 text-cyan-300\">\n    <p class=\"text-center text-3xl\">Vehicle Details.</p>\n    <form class=\"flex flex-col  md:pt-8\" >\n\n    <!-- </form> [formGroup]=\"registerForm\" (submit)=\"registerSubmit()\" > -->\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"vechicleType\" class=\"text-lg\">Vehicle Type</label>\n            <select  id=\"vechicleType\" (change)=\"onTypeValue()\" formControlName=\"type\" placeholder=\"John Smith\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" >\n                <option value=\"Car\">Car</option>\n                <option value=\"Moto\" >Two wheeler</option>\n            </select>\n            <!-- <span *ngIf=\"registerForm.hasError('required','name')&& registerForm.controls['name'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 col-12\">*Name is required</span> -->\n        </div>\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"phone\" class=\"text-lg\">Contact number</label>\n            <input type=\"number\" id=\"phone\" formControlName=\"phone\" placeholder=\"Contact Number\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Phone Number is required</span>\n                            <span *ngIf=\"registerForm.hasError('pattern','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid Phone number</span>\n                            <span *ngIf=\"registerForm.hasError('minLength','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span>\n                            <span *ngIf=\"registerForm.hasError('maxLength','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span> -->\n        </div>\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"email\" class=\"text-lg\">Email</label>\n            <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"your@email.com\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','email')&& registerForm.controls['email'].dirty\"\n                                class=\"text-danger text-center ps-2 pt-2 \">*Email is required</span>\n                                <span *ngIf=\"registerForm.hasError('email','email')&& registerForm.controls['email'].dirty\"\n                                class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid email</span> -->\n        </div>\n\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"password\" class=\"text-lg\">Password</label>\n            <input type=\"password\" id=\"password\" formControlName=\"password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Password is required</span>\n            <span *ngIf=\"registerForm.hasError('pattern','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Must contain at least one number and one uppercase,lowercase, special letter</span>\n            <span *ngIf=\"registerForm.hasError('minLength','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Minimum 8 characters</span> -->\n        </div>\n\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"confirm-password\" class=\"text-lg\">Confirm Password</label>\n            <input type=\"password\" id=\"confirm-password\" formControlName=\"confirm_password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.get('confirm_password')?.hasError('confirmPasswordValidator')\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Password is not matching</span>\n            <span *ngIf=\"registerForm.hasError('required','confirm_password')&& registerForm.controls['confirm_password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*confirm  Password is required</span> -->\n        </div>\n\n        <input type=\"submit\"  value=\"Register\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-2 rounded\" />\n        <span class=\"text-center text-red-950\" >Something went wrong!!</span>\n    </form>\n   \n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}