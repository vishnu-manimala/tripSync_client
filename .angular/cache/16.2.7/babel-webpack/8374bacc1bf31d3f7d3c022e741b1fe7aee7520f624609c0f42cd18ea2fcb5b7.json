{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtService } from '../services/jwt.service';\nexport const authGuard = (route, state) => {\n  const jwtService = inject(JwtService);\n  const router = inject(Router);\n  const isLoggedIn = jwtService.isTokenAvailable();\n  if (!isLoggedIn) {\n    console.log(state.url);\n    router.navigate(['auth']);\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","Router","JwtService","authGuard","route","state","jwtService","router","isLoggedIn","isTokenAvailable","console","log","url","navigate"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { JwtService } from '../services/jwt.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const jwtService = inject(JwtService);\n  const router = inject(Router);\n  const isLoggedIn = jwtService.isTokenAvailable();\n  if(!isLoggedIn){\n    console.log(state.url);\n    router.navigate(['auth']);\n    return false;\n  }\n    return true;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,UAAU,QAAQ,yBAAyB;AAEpD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,UAAU,GAAGN,MAAM,CAACE,UAAU,CAAC;EACrC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAC7B,MAAMO,UAAU,GAAGF,UAAU,CAACG,gBAAgB,EAAE;EAChD,IAAG,CAACD,UAAU,EAAC;IACbE,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,GAAG,CAAC;IACtBL,MAAM,CAACM,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;IACzB,OAAO,KAAK;;EAEZ,OAAO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}