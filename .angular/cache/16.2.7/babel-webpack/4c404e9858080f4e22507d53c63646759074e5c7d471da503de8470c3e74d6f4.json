{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-cookie-service\";\nexport class JwtService {\n  constructor(_cookie) {\n    this._cookie = _cookie;\n  }\n  setToken(token) {\n    this._cookie.set('access_token', token);\n    return \"success\";\n  }\n  setRole(role) {\n    this._cookie.set('role', role);\n    return \"success\";\n  }\n  getToken() {\n    const Token = this._cookie.get('access_token');\n    return myToken;\n  }\n  getRole() {\n    return this._cookie.get('role');\n  }\n  discardToken() {\n    this._cookie.delete('access_token');\n    this._cookie.delete('role');\n    return this.isTokenAvailable() ? \"success\" : \"failed\";\n  }\n  isTokenAvailable() {\n    return this._cookie.check('access_token');\n  }\n  setLocal(data) {\n    localStorage.setItem('state', JSON.stringify(data));\n  }\n  static #_ = this.ɵfac = function JwtService_Factory(t) {\n    return new (t || JwtService)(i0.ɵɵinject(i1.CookieService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JwtService,\n    factory: JwtService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["JwtService","constructor","_cookie","setToken","token","set","setRole","role","getToken","Token","get","myToken","getRole","discardToken","delete","isTokenAvailable","check","setLocal","data","localStorage","setItem","JSON","stringify","_","i0","ɵɵinject","i1","CookieService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\services\\jwt.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UserRole } from '../models/auth.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtService {\n\n  constructor(private _cookie:CookieService) { }\n  setToken(token:string):string{\n    this._cookie.set('access_token',token);\n    return \"success\";\n  }\n  setRole(role:UserRole):string{\n    this._cookie.set('role',role);\n    return \"success\";\n  }\n  getToken():string{\n    const Token =  this._cookie.get('access_token');\n    return myToken;\n  }\n  getRole():string{\n    return this._cookie.get('role');\n  }\n\n  discardToken():string{\n      this._cookie.delete('access_token');\n      this._cookie.delete('role');\n      return this.isTokenAvailable()?\"success\":\"failed\";\n  }\n\n  isTokenAvailable():boolean{\n    return this._cookie.check('access_token');\n  }\n\n  setLocal(data:any){\n    localStorage.setItem('state',JSON.stringify(data));\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,OAAqB;IAArB,KAAAA,OAAO,GAAPA,OAAO;EAAkB;EAC7CC,QAAQA,CAACC,KAAY;IACnB,IAAI,CAACF,OAAO,CAACG,GAAG,CAAC,cAAc,EAACD,KAAK,CAAC;IACtC,OAAO,SAAS;EAClB;EACAE,OAAOA,CAACC,IAAa;IACnB,IAAI,CAACL,OAAO,CAACG,GAAG,CAAC,MAAM,EAACE,IAAI,CAAC;IAC7B,OAAO,SAAS;EAClB;EACAC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAI,IAAI,CAACP,OAAO,CAACQ,GAAG,CAAC,cAAc,CAAC;IAC/C,OAAOC,OAAO;EAChB;EACAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACV,OAAO,CAACQ,GAAG,CAAC,MAAM,CAAC;EACjC;EAEAG,YAAYA,CAAA;IACR,IAAI,CAACX,OAAO,CAACY,MAAM,CAAC,cAAc,CAAC;IACnC,IAAI,CAACZ,OAAO,CAACY,MAAM,CAAC,MAAM,CAAC;IAC3B,OAAO,IAAI,CAACC,gBAAgB,EAAE,GAAC,SAAS,GAAC,QAAQ;EACrD;EAEAA,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACb,OAAO,CAACc,KAAK,CAAC,cAAc,CAAC;EAC3C;EAEAC,QAAQA,CAACC,IAAQ;IACfC,YAAY,CAACC,OAAO,CAAC,OAAO,EAACC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;EACpD;EAAC,QAAAK,CAAA,G;qBA/BUvB,UAAU,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAV5B,UAAU;IAAA6B,OAAA,EAAV7B,UAAU,CAAA8B,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}