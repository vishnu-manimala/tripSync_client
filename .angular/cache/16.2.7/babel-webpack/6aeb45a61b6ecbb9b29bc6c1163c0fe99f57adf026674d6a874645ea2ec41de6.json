{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { confirmPasswordValidator } from 'src/app/validators/confirm.password.validator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"*Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Phone Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Enter a valid Phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Not a valid phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Not a valid phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Email is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Enter a valid email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Must contain at least one number and one uppercase,lowercase, special letter\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Minimum 8 characters\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*Password is not matching\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵtext(1, \"*confirm Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_span_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Something went wrong!!\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class RegisterComponent {\n  constructor(_router, _form, _authService) {\n    this._router = _router;\n    this._form = _form;\n    this._authService = _authService;\n    this.isError = false;\n    this.imageUrl = '../../../assets/tp.png';\n    this.registerForm = this._form.group({\n      name: this._form.control(\"\", Validators.required),\n      phone: this._form.control(\"\", Validators.compose([Validators.pattern(/^\\d{10}$/), Validators.minLength(10), Validators.maxLength(10), Validators.required])),\n      email: this._form.control(\"\", Validators.compose([Validators.required, Validators.email])),\n      password: this._form.control(\"\", Validators.compose([Validators.minLength(8), Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}'), Validators.required])),\n      confirm_password: this._form.control(\"\", Validators.required)\n    }, {\n      validators: [confirmPasswordValidator('password', 'confirm_password')]\n    });\n  }\n  navigateToLogin() {\n    this._router.navigate(['auth']);\n  }\n  passwordMatchValidator(group) {\n    console.log(\"in pass\");\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirm_password')?.value;\n    console.log(\"pas\", password !== confirmPassword);\n    if (password !== confirmPassword) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  registerSubmit() {\n    console.log(\"gkjhh\", this.registerForm.value);\n    console.log(\"gkjhh\", this.registerForm.valid);\n    if (this.registerForm.valid) {\n      if (!this.passwordMatchValidator(this.registerForm)) {\n        this._authService.registerUser(this.registerForm.value).subscribe(result => {\n          console.log(result);\n          if (result == \"success\") {\n            this._router.navigate(['auth']);\n          } else {\n            this.isError = true;\n          }\n        });\n      }\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 45,\n    vars: 15,\n    consts: [[1, \"flex\", \"justify-center\", \"md:justify-start\", \"pt-12\", \"md:pl-12\", \"md:-mb-12\"], [\"alt\", \"logo\", 1, \"h-20\", \"w-28\", 3, \"src\"], [1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"md:pt-8\", 3, \"formGroup\", \"submit\"], [1, \"flex\", \"flex-col\", \"pt-1\"], [\"for\", \"name\", 1, \"text-lg\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"John Smith\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger text-center ps-2 pt-2 col-12\", 4, \"ngIf\"], [\"for\", \"phone\", 1, \"text-lg\"], [\"type\", \"number\", \"id\", \"phone\", \"formControlName\", \"phone\", \"placeholder\", \"Contact Number\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger text-center ps-2 pt-2 \", 4, \"ngIf\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"your@email.com\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"confirm-password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"confirm-password\", \"formControlName\", \"confirm_password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-2\", \"rounded\"], [\"class\", \"text-center text-red-950\", 4, \"ngIf\"], [1, \"text-center\", \"pt-6\", \"pb-12\"], [1, \"underline\", \"font-semibold\", 3, \"click\"], [1, \"text-danger\", \"text-center\", \"ps-2\", \"pt-2\", \"col-12\"], [1, \"text-danger\", \"text-center\", \"ps-2\", \"pt-2\"], [1, \"text-center\", \"text-red-950\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"p\", 3);\n        i0.ɵɵtext(4, \"Join Us.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_5_listener() {\n          return ctx.registerSubmit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, RegisterComponent_span_10_Template, 2, 0, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Contact number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, RegisterComponent_span_15_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(16, RegisterComponent_span_16_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(17, RegisterComponent_span_17_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(18, RegisterComponent_span_18_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 5)(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 13);\n        i0.ɵɵtemplate(23, RegisterComponent_span_23_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(24, RegisterComponent_span_24_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5)(26, \"label\", 14);\n        i0.ɵɵtext(27, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 15);\n        i0.ɵɵtemplate(29, RegisterComponent_span_29_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(30, RegisterComponent_span_30_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(31, RegisterComponent_span_31_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 5)(33, \"label\", 16);\n        i0.ɵɵtext(34, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"input\", 17);\n        i0.ɵɵtemplate(36, RegisterComponent_span_36_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(37, RegisterComponent_span_37_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"input\", 18);\n        i0.ɵɵtemplate(39, RegisterComponent_span_39_Template, 2, 0, \"span\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 20)(41, \"p\");\n        i0.ɵɵtext(42, \"Already have an account? \");\n        i0.ɵɵelementStart(43, \"a\", 21);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_a_click_43_listener() {\n          return ctx.navigateToLogin();\n        });\n        i0.ɵɵtext(44, \"Log in here.\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        let tmp_12_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", ctx.imageUrl, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"required\", \"name\") && ctx.registerForm.controls[\"name\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"required\", \"phone\") && ctx.registerForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"pattern\", \"phone\") && ctx.registerForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"minLength\", \"phone\") && ctx.registerForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"maxLength\", \"phone\") && ctx.registerForm.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"required\", \"email\") && ctx.registerForm.controls[\"email\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"email\", \"email\") && ctx.registerForm.controls[\"email\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"required\", \"password\") && ctx.registerForm.controls[\"password\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"pattern\", \"password\") && ctx.registerForm.controls[\"password\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"minLength\", \"password\") && ctx.registerForm.controls[\"password\"].dirty);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_12_0 = ctx.registerForm.get(\"confirm_password\")) == null ? null : tmp_12_0.hasError(\"confirmPasswordValidator\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerForm.hasError(\"required\", \"confirm_password\") && ctx.registerForm.controls[\"confirm_password\"].dirty);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isError);\n      }\n    },\n    dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","confirmPasswordValidator","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","RegisterComponent","constructor","_router","_form","_authService","isError","imageUrl","registerForm","group","name","control","required","phone","compose","pattern","minLength","maxLength","email","password","confirm_password","validators","navigateToLogin","navigate","passwordMatchValidator","console","log","get","value","confirmPassword","registerSubmit","valid","registerUser","subscribe","result","_","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","RegisterComponent_Template_form_submit_5_listener","ɵɵtemplate","RegisterComponent_span_10_Template","RegisterComponent_span_15_Template","RegisterComponent_span_16_Template","RegisterComponent_span_17_Template","RegisterComponent_span_18_Template","RegisterComponent_span_23_Template","RegisterComponent_span_24_Template","RegisterComponent_span_29_Template","RegisterComponent_span_30_Template","RegisterComponent_span_31_Template","RegisterComponent_span_36_Template","RegisterComponent_span_37_Template","RegisterComponent_span_39_Template","RegisterComponent_Template_a_click_43_listener","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl","hasError","controls","dirty","tmp_12_0"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\register\\register.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { confirmPasswordValidator } from 'src/app/validators/confirm.password.validator';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n  registerForm: FormGroup;\n  isError:boolean=false;\n  imageUrl:string = '../../../assets/tp.png'\n   registerSubscription!\n\nconstructor(private _router:Router, private _form:FormBuilder, private _authService:AuthService){\n  this.registerForm = this._form.group({\n    name:this._form.control(\"\",Validators.required),\n    phone:this._form.control(\"\",Validators.compose([ Validators.pattern(/^\\d{10}$/),Validators.minLength(10),Validators.maxLength(10),Validators.required])),\n    email:this._form.control(\"\",Validators.compose([Validators.required,Validators.email])),\n    password:this._form.control(\"\",Validators.compose([ Validators.minLength(8),Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}'),Validators.required])),\n    confirm_password:this._form.control(\"\",Validators.required)\n  },{\n    validators: [confirmPasswordValidator('password', 'confirm_password')]\n  });\n}\n\nnavigateToLogin(){\n  this._router.navigate(['auth'])\n}\n\npasswordMatchValidator(group:FormGroup){\n  console.log(\"in pass\")\n  const password = group.get('password')?.value;\n  const confirmPassword = group.get('confirm_password')?.value;\n  console.log(\"pas\",password !== confirmPassword );\n  if(password !== confirmPassword ){\n  \n    return true\n  }else{\n    return false;\n  }\n}\n\n  registerSubmit() {\n    console.log(\"gkjhh\",this.registerForm.value)\n    console.log(\"gkjhh\",this.registerForm.valid)\n    if (this.registerForm.valid) {\n      if (!this.passwordMatchValidator(this.registerForm)) {\n        this._authService.registerUser(this.registerForm.value).subscribe(\n          (result: any) => {\n            console.log(result);\n            if (result == \"success\") {\n              this._router.navigate(['auth']);\n            }else{\n              this.isError = true;\n            }\n          })\n      }\n    }\n  }\n \n}\n","\r\n\r\n            <div class=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-12\">\r\n                <!-- <a href=\"#\" class=\"bg-black text-white font-bold text-xl p-4\" alt=\"Logo\">TripSync</a> -->\r\n                <img [src]=\"imageUrl\" alt=\"logo\" class=\"h-20 w-28\">\r\n            </div>\r\n\r\n            <div class=\"flex flex-col justify-center md:justify-start my-auto md:pt-0 px-8 md:px-24 lg:px-32\">\r\n                <p class=\"text-center text-3xl\">Join Us.</p>\r\n                <form class=\"flex flex-col  md:pt-8\"  [formGroup]=\"registerForm\" (submit)=\"registerSubmit()\" >\r\n                    <div class=\"flex flex-col pt-1\">\r\n                        <label for=\"name\" class=\"text-lg\">Name</label>\r\n                        <input type=\"text\" id=\"name\" formControlName=\"name\" placeholder=\"John Smith\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\r\n                        <span *ngIf=\"registerForm.hasError('required','name')&& registerForm.controls['name'].dirty\"\r\n                        class=\"text-danger text-center ps-2 pt-2 col-12\">*Name is required</span>\r\n                    </div>\r\n                    <div class=\"flex flex-col pt-1\">\r\n                        <label for=\"phone\" class=\"text-lg\">Contact number</label>\r\n                        <input type=\"number\" id=\"phone\" formControlName=\"phone\" placeholder=\"Contact Number\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\r\n                        <span *ngIf=\"registerForm.hasError('required','phone')&& registerForm.controls['phone'].dirty\"\r\n                                        class=\"text-danger text-center ps-2 pt-2 \">*Phone Number is required</span>\r\n                                        <span *ngIf=\"registerForm.hasError('pattern','phone')&& registerForm.controls['phone'].dirty\"\r\n                                        class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid Phone number</span>\r\n                                        <span *ngIf=\"registerForm.hasError('minLength','phone')&& registerForm.controls['phone'].dirty\"\r\n                                        class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span>\r\n                                        <span *ngIf=\"registerForm.hasError('maxLength','phone')&& registerForm.controls['phone'].dirty\"\r\n                                        class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span>\r\n                    </div>\r\n                    <div class=\"flex flex-col pt-1\">\r\n                        <label for=\"email\" class=\"text-lg\">Email</label>\r\n                        <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"your@email.com\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\r\n                        <span *ngIf=\"registerForm.hasError('required','email')&& registerForm.controls['email'].dirty\"\r\n                                            class=\"text-danger text-center ps-2 pt-2 \">*Email is required</span>\r\n                                            <span *ngIf=\"registerForm.hasError('email','email')&& registerForm.controls['email'].dirty\"\r\n                                            class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid email</span>\r\n                    </div>\r\n    \r\n                    <div class=\"flex flex-col pt-1\">\r\n                        <label for=\"password\" class=\"text-lg\">Password</label>\r\n                        <input type=\"password\" id=\"password\" formControlName=\"password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\r\n                        <span *ngIf=\"registerForm.hasError('required','password')&& registerForm.controls['password'].dirty\"\r\n                        class=\"text-danger text-center ps-2 pt-2 \">*Password is required</span>\r\n                        <span *ngIf=\"registerForm.hasError('pattern','password')&& registerForm.controls['password'].dirty\"\r\n                        class=\"text-danger text-center ps-2 pt-2 \">*Must contain at least one number and one uppercase,lowercase, special letter</span>\r\n                        <span *ngIf=\"registerForm.hasError('minLength','password')&& registerForm.controls['password'].dirty\"\r\n                        class=\"text-danger text-center ps-2 pt-2 \">*Minimum 8 characters</span>\r\n                    </div>\r\n\r\n                    <div class=\"flex flex-col pt-1\">\r\n                        <label for=\"confirm-password\" class=\"text-lg\">Confirm Password</label>\r\n                        <input type=\"password\" id=\"confirm-password\" formControlName=\"confirm_password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\r\n                        <span *ngIf=\"registerForm.get('confirm_password')?.hasError('confirmPasswordValidator')\"\r\n                        class=\"text-danger text-center ps-2 pt-2 \">*Password is not matching</span>\r\n                        <span *ngIf=\"registerForm.hasError('required','confirm_password')&& registerForm.controls['confirm_password'].dirty\"\r\n                        class=\"text-danger text-center ps-2 pt-2 \">*confirm  Password is required</span>\r\n                    </div>\r\n    \r\n                    <input type=\"submit\"  value=\"Register\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-2 rounded\" />\r\n                    <span class=\"text-center text-red-950\" *ngIf=\"isError\">Something went wrong!!</span>\r\n                </form>\r\n                <div class=\"text-center pt-6 pb-12\">\r\n                    <p>Already have an account? <a (click)=\"navigateToLogin()\" class=\"underline font-semibold\">Log in here.</a></p>\r\n                </div>\r\n            </div>\r\n\r\n     "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}