{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { confirmPasswordValidator } from 'src/app/validators/confirm.password.validator';\nexport let ResetPasswordComponent = class ResetPasswordComponent {\n  constructor(_form, priavte, _route, _router) {\n    this._form = _form;\n    this._router = _router;\n    this.error_message = \"\";\n    this.imageUrl = '../../../assets/tp.png';\n    this.resetData = this._form.group({\n      otp: this._form.control(\"\", Validators.compose([Validators.required, Validators.minLength(4), Validators.maxLength(4)])),\n      password: this._form.control(\"\", Validators.compose([Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}'), Validators.required])),\n      confirm_password: this._form.control(\"\", Validators.required)\n    }, {\n      validators: [confirmPasswordValidator('password', 'confirm_password')]\n    });\n  }\n  ngOnInit() {\n    this._route;\n  }\n  navigation(url) {\n    this._router.navigate([url]);\n  }\n  reset() {\n    if (this.resetData.valid) {}\n  }\n};\nResetPasswordComponent = __decorate([Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})], ResetPasswordComponent);","map":{"version":3,"names":["Component","Validators","confirmPasswordValidator","ResetPasswordComponent","constructor","_form","priavte","_route","_router","error_message","imageUrl","resetData","group","otp","control","compose","required","minLength","maxLength","password","pattern","confirm_password","validators","ngOnInit","navigation","url","navigate","reset","valid","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\reset-password\\reset-password.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { confirmPasswordValidator } from 'src/app/validators/confirm.password.validator';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent {\n  resetData!: FormGroup;\n  error_message: string = \"\";\n  imageUrl:string = '../../../assets/tp.png';\n  constructor(private _form:FormBuilder,priavte _route:R private _router:Router){\n    this.resetData = this._form.group({\n      otp: this._form.control(\"\", Validators.compose([Validators.required, Validators.minLength(4),Validators.maxLength(4)])),\n      password: this._form.control(\"\", Validators.compose([Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}'), Validators.required])),\n      confirm_password:this._form.control(\"\",Validators.required)\n    },{\n      validators: [confirmPasswordValidator('password', 'confirm_password')]\n    });\n  }\n  \n  ngOnInit() {\n    this._route\n  }\n  \n    \n\n  navigation(url:string){\n      this._router.navigate([url]);\n  }\n  reset(){\n    if(this.resetData.valid){\n\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,wBAAwB,QAAQ,+CAA+C;AAOjF,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,YAAoBC,KAAiB,EAACC,OAAO,EAACC,MAAQ,EAASC,OAAc;IAAzD,KAAAH,KAAK,GAALA,KAAK;IAAsC,KAAAG,OAAO,GAAPA,OAAO;IAFtE,KAAAC,aAAa,GAAW,EAAE;IAC1B,KAAAC,QAAQ,GAAU,wBAAwB;IAExC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC;MAChCC,GAAG,EAAE,IAAI,CAACR,KAAK,CAACS,OAAO,CAAC,EAAE,EAAEb,UAAU,CAACc,OAAO,CAAC,CAACd,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACgB,SAAS,CAAC,CAAC,CAAC,EAAChB,UAAU,CAACiB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvHC,QAAQ,EAAE,IAAI,CAACd,KAAK,CAACS,OAAO,CAAC,EAAE,EAAEb,UAAU,CAACc,OAAO,CAAC,CAACd,UAAU,CAACmB,OAAO,CAAC,0EAA0E,CAAC,EAAEnB,UAAU,CAACe,QAAQ,CAAC,CAAC,CAAC;MAC3KK,gBAAgB,EAAC,IAAI,CAAChB,KAAK,CAACS,OAAO,CAAC,EAAE,EAACb,UAAU,CAACe,QAAQ;KAC3D,EAAC;MACAM,UAAU,EAAE,CAACpB,wBAAwB,CAAC,UAAU,EAAE,kBAAkB,CAAC;KACtE,CAAC;EACJ;EAEAqB,QAAQA,CAAA;IACN,IAAI,CAAChB,MAAM;EACb;EAIAiB,UAAUA,CAACC,GAAU;IACjB,IAAI,CAACjB,OAAO,CAACkB,QAAQ,CAAC,CAACD,GAAG,CAAC,CAAC;EAChC;EACAE,KAAKA,CAAA;IACH,IAAG,IAAI,CAAChB,SAAS,CAACiB,KAAK,EAAC,C;EAG1B;CACD;AA5BYzB,sBAAsB,GAAA0B,UAAA,EALlC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW7B,sBAAsB,CA4BlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}