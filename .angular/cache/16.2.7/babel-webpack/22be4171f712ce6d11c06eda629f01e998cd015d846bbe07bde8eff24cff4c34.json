{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(_router, _formlogin, _authService) {\n    this._router = _router;\n    this._formlogin = _formlogin;\n    this._authService = _authService;\n    this.otpLoginForm = this._formlogin.group({\n      phone: this._formlogin.control(\"\", Validators.compose([Validators.required, Validators.pattern(/^\\d{10}$/), Validators.minLength(10)]))\n    });\n  }\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password']);\n  }\n  sendOtp() {\n    if (this.otpLoginForm.valid) {\n      console.log(this.otpLoginForm.value);\n      this.service.sendOtp(this.otpLoginForm.value).subscribe(result => {\n        console.log(result);\n        if (result == 'success') {\n          this.router.navigate(['verify_otp']);\n        } else {\n          this.error = \"Register first!\";\n        }\n      });\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","_router","_formlogin","_authService","otpLoginForm","group","phone","control","compose","required","pattern","minLength","navigateToLoginWithPassword","navigate","sendOtp","valid","console","log","value","service","subscribe","result","router","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {  Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  otpLoginForm:FormGroup;\nconstructor(private _router:Router,private _formlogin:FormBuilder, private _authService){\n\n  this.otpLoginForm = this._formlogin.group({\n    phone: this._formlogin.control(\"\", Validators.compose([Validators.required,Validators.pattern(/^\\d{10}$/),Validators.minLength(10)])),\n  })\n}\n\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password'])\n  }\n\n  sendOtp(){\n if(this.otpLoginForm.valid){\n      console.log(this.otpLoginForm.value);\n      this.service.sendOtp(this.otpLoginForm.value).subscribe((result: any)=>{\n        console.log(result);\n        if(result == 'success'){\n          this.router.navigate(['verify_otp']);\n        }else{\n          this.error = \"Register first!\"\n        }\n      })\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAE3BC,YAAoBC,OAAc,EAASC,UAAsB,EAAUC,YAAY;IAAnE,KAAAF,OAAO,GAAPA,OAAO;IAAgB,KAAAC,UAAU,GAAVA,UAAU;IAAsB,KAAAC,YAAY,GAAZA,YAAY;IAErF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACF,UAAU,CAACG,KAAK,CAAC;MACxCC,KAAK,EAAE,IAAI,CAACJ,UAAU,CAACK,OAAO,CAAC,EAAE,EAAET,UAAU,CAACU,OAAO,CAAC,CAACV,UAAU,CAACW,QAAQ,EAACX,UAAU,CAACY,OAAO,CAAC,UAAU,CAAC,EAACZ,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;KACrI,CAAC;EACJ;EAEEC,2BAA2BA,CAAA;IACzB,IAAI,CAACX,OAAO,CAACY,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;EAChD;EAEAC,OAAOA,CAAA;IACR,IAAG,IAAI,CAACV,YAAY,CAACW,KAAK,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACb,YAAY,CAACc,KAAK,CAAC;MACpC,IAAI,CAACC,OAAO,CAACL,OAAO,CAAC,IAAI,CAACV,YAAY,CAACc,KAAK,CAAC,CAACE,SAAS,CAAEC,MAAW,IAAG;QACrEL,OAAO,CAACC,GAAG,CAACI,MAAM,CAAC;QACnB,IAAGA,MAAM,IAAI,SAAS,EAAC;UACrB,IAAI,CAACC,MAAM,CAACT,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;SACrC,MAAI;UACH,IAAI,CAACU,KAAK,GAAG,iBAAiB;;MAElC,CAAC,CAAC;;EAEN;CACD;AA1BYxB,cAAc,GAAAyB,UAAA,EAL1B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW5B,cAAc,CA0B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}