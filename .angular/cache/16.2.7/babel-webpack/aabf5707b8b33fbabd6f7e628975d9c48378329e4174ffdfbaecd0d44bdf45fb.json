{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let AddVehicleComponent = class AddVehicleComponent {};\nAddVehicleComponent = __decorate([Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})], AddVehicleComponent);\n{\n  this.vehicleData = this._form.group({\n    type: this._form.control(\"\", Validators.required),\n    brand: this._form.control(\"\", Validators.required),\n    model: this._form.control(\"\", Validators.required),\n    year: this._form.control(\"\", Validators.required),\n    color: this._form.control(\"\", Validators.required)\n  });\n}\nonTypeValue();\n{\n  console.log(this.vehicleData.value.type);\n  this._vehicleService.getCarBrands(this.vehicleData.value.type).subscribe(result => {\n    this.brands = result;\n    console.log(\"types\", this.brands.Results);\n    this.brands.Results.forEach(element => {\n      console.log(\"carss\", element.MakeName);\n    });\n  });\n}\nsubmitVehicleData();\n{\n  console.log(this.vehicleData.value);\n  if (this.vehicleData.valid) {\n    this.vehicleData.saveVehicleData(this.vehicleData.value).subscribe(result => {\n      this.returnData = result;\n      console.log(this.returnData);\n      if (this.returnData.status == \"Success\") {\n        this.jwt.setToken(this.returnData.token);\n        console.log(\"in succes\");\n        this.router.navigate(['add.vehicle.registartion']);\n      } else {\n        this.error = true;\n        this.errorMessage = this.returnData.message;\n      }\n    });\n  } else {\n    this.error = true;\n    this.errorMessage = \"Form is not valid!\";\n  }\n}","map":{"version":3,"names":["Component","Validators","AddVehicleComponent","__decorate","selector","templateUrl","styleUrls","vehicleData","_form","group","type","control","required","brand","model","year","color","onTypeValue","console","log","value","_vehicleService","getCarBrands","subscribe","result","brands","Results","forEach","element","MakeName","submitVehicleData","valid","saveVehicleData","returnData","status","jwt","setToken","token","router","navigate","error","errorMessage","message"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\user\\vehicles\\add-vehicle\\add-vehicle.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { VehicleService } from 'src/app/services/vehicle.service';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})\nexport class AddVehicleComponent {\n  vehicleData:FormGroup;\n  brands:any;\n  returnData:\n  constructor(private _form:FormBuilder, private _vehicleService:VehicleService){\n    \n    this.vehicleData = this._form.group({\n      type: this._form.control(\"\", Validators.required),\n      brand: this._form.control(\"\", Validators.required),\n      model: this._form.control(\"\", Validators.required),\n      year: this._form.control(\"\", Validators.required),\n      color: this._form.control(\"\", Validators.required)\n    })\n  }\n  onTypeValue(){\n    console.log(this.vehicleData.value.type);\n    this._vehicleService.getCarBrands(this.vehicleData.value.type).subscribe(result=>{\n      this.brands = result\n      console.log(\"types\",this.brands.Results);\n      this.brands.Results.forEach((element:any) => {\n        console.log(\"carss\",element.MakeName)\n      });\n    })\n  }\n\n  submitVehicleData(){\n    console.log(this.vehicleData.value);\n  if (this.vehicleData.valid) {\n    this.vehicleData.saveVehicleData(this.vehicleData.value).subscribe(result => {\n      this.returnData = result;\n      console.log(this.returnData);\n      if (this.returnData.status == \"Success\") {\n        this.jwt.setToken(this.returnData.token);console.log(\"in succes\")\n        this.router.navigate(['add.vehicle.registartion'])\n      } else {\n        this.error = true;\n        this.errorMessage = this.returnData.message;\n      }\n    })\n  }else{\n    this.error = true;\n    this.errorMessage = \"Form is not valid!\";\n  }\n}\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAQ5D,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB,GAIgD;AAJnEA,mBAAmB,GAAAC,UAAA,EAL/BH,SAAS,CAAC;EACTI,QAAQ,EAAE,iBAAiB;EAC3BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWJ,mBAAmB,CAIgD;AAAA;EAE5E,IAAI,CAACK,WAAW,GAAG,IAAI,CAACC,KAAK,CAACC,KAAK,CAAC;IAClCC,IAAI,EAAE,IAAI,CAACF,KAAK,CAACG,OAAO,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;IACjDC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACG,OAAO,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;IAClDE,KAAK,EAAE,IAAI,CAACN,KAAK,CAACG,OAAO,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;IAClDG,IAAI,EAAE,IAAI,CAACP,KAAK,CAACG,OAAO,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ,CAAC;IACjDI,KAAK,EAAE,IAAI,CAACR,KAAK,CAACG,OAAO,CAAC,EAAE,EAAEV,UAAU,CAACW,QAAQ;GAClD,CAAC;;AAEJK,WAAW,EAAE;AAAA;EACXC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,CAACa,KAAK,CAACV,IAAI,CAAC;EACxC,IAAI,CAACW,eAAe,CAACC,YAAY,CAAC,IAAI,CAACf,WAAW,CAACa,KAAK,CAACV,IAAI,CAAC,CAACa,SAAS,CAACC,MAAM,IAAE;IAC/E,IAAI,CAACC,MAAM,GAAGD,MAAM;IACpBN,OAAO,CAACC,GAAG,CAAC,OAAO,EAAC,IAAI,CAACM,MAAM,CAACC,OAAO,CAAC;IACxC,IAAI,CAACD,MAAM,CAACC,OAAO,CAACC,OAAO,CAAEC,OAAW,IAAI;MAC1CV,OAAO,CAACC,GAAG,CAAC,OAAO,EAACS,OAAO,CAACC,QAAQ,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;;AAGJC,iBAAiB,EAAE;AAAA;EACjBZ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,WAAW,CAACa,KAAK,CAAC;EACrC,IAAI,IAAI,CAACb,WAAW,CAACwB,KAAK,EAAE;IAC1B,IAAI,CAACxB,WAAW,CAACyB,eAAe,CAAC,IAAI,CAACzB,WAAW,CAACa,KAAK,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MAC1E,IAAI,CAACS,UAAU,GAAGT,MAAM;MACxBN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACc,UAAU,CAAC;MAC5B,IAAI,IAAI,CAACA,UAAU,CAACC,MAAM,IAAI,SAAS,EAAE;QACvC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAAC,IAAI,CAACH,UAAU,CAACI,KAAK,CAAC;QAACnB,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACjE,IAAI,CAACmB,MAAM,CAACC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC;OACnD,MAAM;QACL,IAAI,CAACC,KAAK,GAAG,IAAI;QACjB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACR,UAAU,CAACS,OAAO;;IAE/C,CAAC,CAAC;GACH,MAAI;IACH,IAAI,CAACF,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,YAAY,GAAG,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}