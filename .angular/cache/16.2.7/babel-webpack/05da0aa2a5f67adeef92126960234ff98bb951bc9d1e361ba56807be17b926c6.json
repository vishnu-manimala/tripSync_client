{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(_http) {\n    this._http = _http;\n  }\n  passwordLogin(data) {\n    return this._http.post('http://localhost:3001/auth/password_login', data);\n  }\n  registerUser(registerData) {\n    console.log(registerData);\n    return this._http.post('http://localhost:3001/auth/register', registerData);\n  }\n  sendOtp(data) {\n    console.log(data);\n    return this._http.post('http://localhost:3001/auth/send_otp', data);\n  }\n  verifyOtp(otp, phone) {\n    console.log(\"otp\", otp, \"jd\", typeof otp, \"phone\", phone);\n    let data = {\n      otp: otp.otp,\n      phone: phone\n    };\n    return this._http.post('http://localhost:3001/auth/verify_otp', data);\n  }\n  resetPassword(data) {}\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","_http","passwordLogin","data","post","registerUser","registerData","console","log","sendOtp","verifyOtp","otp","phone","resetPassword","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from  '@angular/common/http';\nimport { FormGroup } from '@angular/forms';\nimport { sendOtpResponse } from '../models/api.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private _http:HttpClient) { }\n\n  passwordLogin(data:FormGroup){\n    return this._http.post('http://localhost:3001/auth/password_login',data)\n   \n  }\n  registerUser(registerData:FormGroup){\n    console.log(registerData);\n    return this._http.post('http://localhost:3001/auth/register',registerData)\n  }\n\n  sendOtp(data:number|string):any{\n    console.log(data);\n    return this._http.post('http://localhost:3001/auth/send_otp',data);\n  }\n  verifyOtp(otp: {otp:string},phone:string|null){\n    console.log(\"otp\",otp,\"jd\",typeof(otp),\"phone\",phone)\n    let data ={ otp:otp.otp,phone:phone }\n    return this._http.post('http://localhost:3001/auth/verify_otp',data);\n  }\n  resetPassword(data){}\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;EAAe;EAExCC,aAAaA,CAACC,IAAc;IAC1B,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,2CAA2C,EAACD,IAAI,CAAC;EAE1E;EACAE,YAAYA,CAACC,YAAsB;IACjCC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;IACzB,OAAO,IAAI,CAACL,KAAK,CAACG,IAAI,CAAC,qCAAqC,EAACE,YAAY,CAAC;EAC5E;EAEAG,OAAOA,CAACN,IAAkB;IACxBI,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACjB,OAAO,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,qCAAqC,EAACD,IAAI,CAAC;EACpE;EACAO,SAASA,CAACC,GAAiB,EAACC,KAAiB;IAC3CL,OAAO,CAACC,GAAG,CAAC,KAAK,EAACG,GAAG,EAAC,IAAI,EAAC,OAAOA,GAAI,EAAC,OAAO,EAACC,KAAK,CAAC;IACrD,IAAIT,IAAI,GAAE;MAAEQ,GAAG,EAACA,GAAG,CAACA,GAAG;MAACC,KAAK,EAACA;IAAK,CAAE;IACrC,OAAO,IAAI,CAACX,KAAK,CAACG,IAAI,CAAC,uCAAuC,EAACD,IAAI,CAAC;EACtE;EACAU,aAAaA,CAACV,IAAI,GAAE;EAAC,QAAAW,CAAA,G;qBAtBVf,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXpB,WAAW;IAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}