{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtService } from '../services/jwt.service';\nexport const isLoggedOutGuard = (route, state) => {\n  const jwtService = inject(JwtService);\n  const router = inject(Router);\n  const role = jwtService.getRole();\n  const isLoggedIn = jwtService.isTokenAvailable();\n  if (isLoggedIn) {\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","Router","JwtService","isLoggedOutGuard","route","state","jwtService","router","role","getRole","isLoggedIn","isTokenAvailable"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\guards\\is-logged-out.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { JwtService } from '../services/jwt.service';\n\nexport const isLoggedOutGuard: CanActivateFn = (route, state) => {\n  const jwtService = inject(JwtService);\n  const router =inject(Router);\n  const role!:string = jwtService.getRole();\n  const isLoggedIn = jwtService.isTokenAvailable();\n  if(isLoggedIn){\n    return false;\n  }\n  return true;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,UAAU,QAAQ,yBAAyB;AAEpD,OAAO,MAAMC,gBAAgB,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC9D,MAAMC,UAAU,GAAGN,MAAM,CAACE,UAAU,CAAC;EACrC,MAAMK,MAAM,GAAEP,MAAM,CAACC,MAAM,CAAC;EAC5B,MAAMO,IAAI,GAAWF,UAAU,CAACG,OAAO,EAAE;EACzC,MAAMC,UAAU,GAAGJ,UAAU,CAACK,gBAAgB,EAAE;EAChD,IAAGD,UAAU,EAAC;IACZ,OAAO,KAAK;;EAEd,OAAO,IAAI;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}