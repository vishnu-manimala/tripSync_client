{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { UserRole } from 'src/app/models/auth.model';\nexport let VerifyLoginOtpComponent = class VerifyLoginOtpComponent {\n  constructor(_forms, _jwt, _router, _authService, _route, thi, _toaster) {\n    this._forms = _forms;\n    this._jwt = _jwt;\n    this._router = _router;\n    this._authService = _authService;\n    this._route = _route;\n    this.error_message = \"\";\n    this.param = \"\";\n    this.imageUrl = '../../../assets/tp.png';\n    this._route.queryParams.subscribe(params => {\n      this.param = params['phone'];\n      console.log(\"vab\", this.param);\n    });\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4), Validators.required]))\n    });\n  }\n  verifyOtp() {\n    this.verifyLoginSubscription = this._authService.verifyOtp(this.formOtp.value, this.param).subscribe(result => {\n      console.log(result);\n      this.userdata = result;\n      if (this.userdata.status === \"Success\") {\n        let role = this.userdata.data.isAdmin ? UserRole.Admin : UserRole.User;\n        this._jwt.setToken(this.userdata.token);\n        this._jwt.setRole(role);\n        this._jwt.setLocal(this.userdata.data);\n        console.log(\"success\");\n        this._router.navigate(['user']);\n      } else {\n        this.error_message = \"something went wrong\";\n        this._router.navigate(['auth/login.password']);\n      }\n    });\n  }\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password']);\n  }\n  ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.verifyLoginSubscription) {\n      this.verifyLoginSubscription.unsubscribe();\n    }\n  }\n};\nVerifyLoginOtpComponent = __decorate([Component({\n  selector: 'app-verify-login-otp',\n  templateUrl: './verify-login-otp.component.html',\n  styleUrls: ['./verify-login-otp.component.css']\n})], VerifyLoginOtpComponent);","map":{"version":3,"names":["Component","Validators","UserRole","VerifyLoginOtpComponent","constructor","_forms","_jwt","_router","_authService","_route","thi","_toaster","error_message","param","imageUrl","queryParams","subscribe","params","console","log","formOtp","group","otp","control","compose","minLength","maxLength","required","verifyOtp","verifyLoginSubscription","value","result","userdata","status","role","data","isAdmin","Admin","User","setToken","token","setRole","setLocal","navigate","navigateToLoginWithPassword","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\verify-login-otp\\verify-login-otp.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { verifyOtpResponse } from 'src/app/models/api.models';\nimport { UserRole } from 'src/app/models/auth.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { JwtService } from 'src/app/services/jwt.service';\n\n@Component({\n  selector: 'app-verify-login-otp',\n  templateUrl: './verify-login-otp.component.html',\n  styleUrls: ['./verify-login-otp.component.css']\n})\nexport class VerifyLoginOtpComponent {\n  formOtp:FormGroup;\n  error_message:string = \"\";\n  param:string | null = \"\";\n  imageUrl:string = '../../../assets/tp.png'\n  userdata!: verifyOtpResponse;\n  private verifyLoginSubscription!:Subscription;\n\n  constructor(private _forms:FormBuilder,private _jwt:JwtService, private _router:Router, private _authService:AuthService, private _route:ActivatedRoute, thi._toaster){\n\n    this._route.queryParams.subscribe(params=>{\n      this.param = params['phone'];\n      console.log(\"vab\",this.param);\n  })\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4),Validators.required])),\n    })\n  }\n  verifyOtp(){\n   \n    this.verifyLoginSubscription = this._authService.verifyOtp(this.formOtp.value,this.param).subscribe((result: any) => {\n      console.log(result);\n      this.userdata = result;\n      if (this.userdata.status === \"Success\") {\n        let role: UserRole = this.userdata.data.isAdmin ? UserRole.Admin : UserRole.User;\n        this._jwt.setToken(this.userdata.token);\n       this._jwt.setRole(role);\n       this._jwt.setLocal(this.userdata.data);\n       console.log(\"success\");\n       this._router.navigate(['user'])\n        } else {\n          this.error_message = \"something went wrong\"\n          this._router.navigate(['auth/login.password']);\n        }\n    })\n  }\n\n  \n  navigateToLoginWithPassword(){\n    this._router.navigate(['auth/login.password'])\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.verifyLoginSubscription){\n      this.verifyLoginSubscription.unsubscribe();\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}