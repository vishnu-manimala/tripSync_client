{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction ForgotPasswordComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"*Phone number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"*Enter valid phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \"*Enter a valid Phone number\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ForgotPasswordComponent {\n  constructor(_router, _form, _authService, _toaster) {\n    this._router = _router;\n    this._form = _form;\n    this._authService = _authService;\n    this._toaster = _toaster;\n    this.imageUrl = \"\";\n    this.error = \"\";\n  }\n  ngOnInit() {\n    this.resetPassord = this._form.group({\n      phone: this._form.control(\"\", Validators.compose([Validators.required, Validators.pattern(/^\\d{10}$/), Validators.minLength(10)]))\n    });\n  }\n  navigation(url) {\n    this._router.navigate([url]);\n  }\n  submit() {\n    if (this.resetPassord.valid) {\n      this.forgotPasswordSubscription = this._authService.sendOtp(this.resetPassord.value).subscribe(result => {\n        console.log(result);\n        this.response = result;\n        if (this.response.status === 'Success') {\n          this._toaster.success('');\n          this._router.navigate(['auth/reset.password'], {\n            queryParams: {\n              phone: this.response.data\n            }\n          });\n        } else {\n          this.error = this.response.message;\n        }\n      });\n    }\n  }\n  ngOnDestroy() {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if (this.forgotPasswordSubscription) {\n      this.forgotPasswordSubscription.unsubscribe();\n    }\n  }\n  static #_ = this.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 24,\n    vars: 8,\n    consts: [[1, \"flex\", \"justify-center\", \"md:justify-start\", \"pt-12\", \"md:pl-12\", \"md:-mb-24\"], [\"alt\", \"logo\", 1, \"h-20\", \"w-28\", 3, \"src\"], [1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"pt-8\", \"mt-6\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"pt-3\", \"md:pt-8\", 3, \"formGroup\", \"submit\"], [1, \"flex\", \"flex-col\", \"pt-4\"], [\"for\", \"phone\", 1, \"text-lg\"], [\"type\", \"number\", \"id\", \"phone\", \"formControlName\", \"phone\", \"placeholder\", \"Phone\", \"required\", \"\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger ps-2\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-8\", 3, \"disabled\"], [1, \"text-center\", \"pt-12\"], [1, \"underline\", \"font-semibold\", 3, \"click\"], [1, \"text-center\", \"pt-2\", \"pb-12\"], [1, \"text-danger\", \"ps-2\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"p\", 3);\n        i0.ɵɵtext(4, \"Reset Passord!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 4);\n        i0.ɵɵlistener(\"submit\", function ForgotPasswordComponent_Template_form_submit_5_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n        i0.ɵɵtext(8, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 7);\n        i0.ɵɵtemplate(10, ForgotPasswordComponent_span_10_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_span_11_Template, 2, 0, \"span\", 8);\n        i0.ɵɵtemplate(12, ForgotPasswordComponent_span_12_Template, 2, 0, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"p\");\n        i0.ɵɵtext(16, \"Login now? \");\n        i0.ɵɵelementStart(17, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_a_click_17_listener() {\n          return ctx.navigation(\"auth\");\n        });\n        i0.ɵɵtext(18, \"Login here.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(19, \"div\", 12)(20, \"p\");\n        i0.ɵɵtext(21, \"Don't have an account? \");\n        i0.ɵɵelementStart(22, \"a\", 11);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_a_click_22_listener() {\n          return ctx.navigation(\"auth/register\");\n        });\n        i0.ɵɵtext(23, \"Register here.\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", ctx.imageUrl, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetPassord);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPassord.hasError(\"required\", \"phone\") && ctx.resetPassord.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPassord.hasError(\"pattern\", \"phone\") && ctx.resetPassord.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPassord.hasError(\"minLength\", \"phone\") && ctx.resetPassord.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"disabled\", ctx.resetPassord.invalid);\n        i0.ɵɵproperty(\"disabled\", ctx.resetPassord.invalid);\n      }\n    },\n    dependencies: [i5.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgotPasswordComponent","constructor","_router","_form","_authService","_toaster","imageUrl","error","ngOnInit","resetPassord","group","phone","control","compose","required","pattern","minLength","navigation","url","navigate","submit","valid","forgotPasswordSubscription","sendOtp","value","subscribe","result","console","log","response","status","success","queryParams","data","message","ngOnDestroy","unsubscribe","_","ɵɵdirectiveInject","i1","Router","i2","FormBuilder","i3","AuthService","i4","ToastrService","_2","selectors","decls","vars","consts","template","ForgotPasswordComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","ForgotPasswordComponent_Template_form_submit_5_listener","ɵɵtemplate","ForgotPasswordComponent_span_10_Template","ForgotPasswordComponent_span_11_Template","ForgotPasswordComponent_span_12_Template","ForgotPasswordComponent_Template_a_click_17_listener","ForgotPasswordComponent_Template_a_click_22_listener","ɵɵadvance","ɵɵproperty","ɵɵsanitizeUrl","hasError","controls","dirty","ɵɵclassProp","invalid"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\forgot-password\\forgot-password.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\auth\\login\\forgot-password\\forgot-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { sendOtpResponse } from 'src/app/models/api.models';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  imageUrl: String = \"\";\n  resetPassord!: FormGroup;\n  response!: sendOtpResponse;\n  error: string = \"\";\nprivate forgotPasswordSubscription!:Subscription;\n\n  constructor(private _router: Router, private _form: FormBuilder, private _authService: AuthService,private _toaster:ToastrService) { }\n  ngOnInit(): void {\n    this.resetPassord = this._form.group({\n      phone: this._form.control(\"\", Validators.compose([Validators.required, Validators.pattern(/^\\d{10}$/), Validators.minLength(10)])),\n    })\n  }\n\n  navigation(url: string) {\n    this._router.navigate([url]);\n  }\n\n  submit() {\n    if (this.resetPassord.valid) {\n      this.forgotPasswordSubscription = this._authService.sendOtp(this.resetPassord.value).subscribe((result: sendOtpResponse) => {\n        console.log(result);\n        this.response = result;\n        if (this.response.status === 'Success') {\n          this._toaster.success('')\n          this._router.navigate(['auth/reset.password'], { queryParams: { phone: this.response.data } });\n        } else {\n          this.error = this.response.message;\n        }\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n    //Called once, before the instance is destroyed.\n    //Add 'implements OnDestroy' to the class.\n    if(this.forgotPasswordSubscription){\n      this.forgotPasswordSubscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"flex justify-center md:justify-start pt-12 md:pl-12 md:-mb-24 \">\n    <!-- <a href=\"#\" class=\"bg-black text-white font-bold text-xl p-4\">TripSync</a> -->\n    <img [src]=\"imageUrl\" alt=\"logo\" class=\"h-20 w-28\">\n</div>\n\n<div class=\"flex flex-col justify-center md:justify-start my-auto pt-8 mt-6 md:pt-0 px-8 md:px-24 lg:px-32\">\n    <p class=\"text-center text-3xl\">Reset Passord!</p>\n    <form class=\"flex flex-col pt-3 md:pt-8\" [formGroup]=\"resetPassord\" (submit)=\"submit()\">\n        <div class=\"flex flex-col pt-4\">\n            <label for=\"phone\" class=\"text-lg\">Phone</label>\n            <input type=\"number\" id=\"phone\" formControlName=\"phone\" placeholder=\"Phone\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" required>\n            <span *ngIf=\"resetPassord.hasError('required','phone') && resetPassord.controls['phone'].dirty\" class=\"text-danger ps-2\">*Phone number is required</span>\n            <span *ngIf=\"resetPassord.hasError('pattern','phone') && resetPassord.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter valid phone number</span>\n            <span *ngIf=\"resetPassord.hasError('minLength','phone') && resetPassord.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter a valid Phone number</span>\n        </div>\n        <input [disabled]=\"resetPassord.invalid\" [class.disabled]=\"resetPassord.invalid\" type=\"submit\" value=\"Submit\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\">\n    </form>\n    <div class=\"text-center pt-12 \">\n        <p>Login now? <a class=\"underline font-semibold\" (click)=\"navigation('auth')\">Login here.</a>\n        </p>\n    </div>\n    <div class=\"text-center pt-2 pb-12\">\n        <p>Don't have an account? <a class=\"underline font-semibold\" (click)=\"navigation('auth/register')\">Register here.</a>\n        </p>\n    </div>\n\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}