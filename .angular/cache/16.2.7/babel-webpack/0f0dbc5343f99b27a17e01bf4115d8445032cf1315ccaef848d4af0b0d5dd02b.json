{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction OtpComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1, \"*OTP is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1, \"*Enter valid OTP\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction OtpComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1, \"*Enter a valid OTP\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class OtpComponent {\n  constructor(_forms, _router) {\n    this._forms = _forms;\n    this._router = _router;\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4), Validators.required]))\n    });\n  }\n  verifyOtp() {}\n  navigateToLoginWithPassword() {\n    this._router.navigate(['auth/login.password']);\n  }\n  static #_ = this.ɵfac = function OtpComponent_Factory(t) {\n    return new (t || OtpComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OtpComponent,\n    selectors: [[\"app-otp\"]],\n    decls: 12,\n    vars: 4,\n    consts: [[1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"pt-8\", \"md:mt-16\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"pt-3\", \"md:pt-8\", 3, \"formGroup\", \"submit\"], [1, \"flex\", \"flex-col\", \"pt-4\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"otp\", \"placeholder\", \"Phone\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-danger ps-2\", 4, \"ngIf\"], [\"type\", \"submit\", \"value\", \"Send OTP\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-8\"], [1, \"text-danger\", \"ps-2\"]],\n    template: function OtpComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Verify OTP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function OtpComponent_Template_form_submit_3_listener() {\n          return ctx.verifyOtp();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵtemplate(8, OtpComponent_span_8_Template, 2, 0, \"span\", 6);\n        i0.ɵɵtemplate(9, OtpComponent_span_9_Template, 2, 0, \"span\", 6);\n        i0.ɵɵtemplate(10, OtpComponent_span_10_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.formOtp);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"required\", \"otp\") && ctx.formOtp.controls[\"otp\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"maxLength\", \"otp\") && ctx.formOtp.controls[\"phone\"].dirty);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formOtp.hasError(\"minLength\", \"otp\") && ctx.formOtp.controls[\"phone\"].dirty);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","OtpComponent","constructor","_forms","_router","formOtp","group","otp","control","compose","minLength","maxLength","required","verifyOtp","navigateToLoginWithPassword","navigate","_","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","_2","selectors","decls","vars","consts","template","OtpComponent_Template","rf","ctx","ɵɵlistener","OtpComponent_Template_form_submit_3_listener","ɵɵelement","ɵɵtemplate","OtpComponent_span_8_Template","OtpComponent_span_9_Template","OtpComponent_span_10_Template","ɵɵadvance","ɵɵproperty","hasError","controls","dirty"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\sharedComponents\\otp\\otp.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\sharedComponents\\otp\\otp.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-otp',\n  templateUrl: './otp.component.html',\n  styleUrls: ['./otp.component.css']\n})\nexport class OtpComponent {\n  formOtp:FormGroup;\n  constructor(private _forms:FormBuilder, private _router:Router){\n    this.formOtp = this._forms.group({\n      otp: this._forms.control(\"\", Validators.compose([Validators.minLength(4), Validators.maxLength(4),Validators.required])),\n    })\n  }\n  verifyOtp(){}\n\n  \n  navigateToLoginWithPassword(){\n    this._router.navigate(['auth/login.password'])\n  }\n}\n","<div class=\"flex flex-col justify-center md:justify-start my-auto pt-8 md:mt-16 md:pt-0 px-8 md:px-24 lg:px-32\">\n    <p class=\"text-center text-3xl\">Verify OTP</p>\n    <form class=\"flex flex-col pt-3 md:pt-8\" [formGroup]=\"formOtp\" (submit)=\"verifyOtp()\">\n        <div class=\"flex flex-col pt-4\">\n            <label for=\"email\" class=\"text-lg\">Phone</label>\n            <input type=\"email\" id=\"email\" formControlName=\"otp\" placeholder=\"Phone\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\">\n            <span *ngIf=\"formOtp.hasError('required','otp') && formOtp.controls['otp'].dirty\" class=\"text-danger ps-2\">*OTP is required</span>\n            <span *ngIf=\"formOtp.hasError('maxLength','otp') && formOtp.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter valid OTP</span>\n            <span *ngIf=\"formOtp.hasError('minLength','otp') && formOtp.controls['phone'].dirty\" class=\"text-danger ps-2\">*Enter a valid OTP</span>\n        </div>\n        <input type=\"submit\" value=\"Send OTP\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-8\">\n    </form>\n   \n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICKvDC,EAAA,CAAAC,cAAA,cAA2G;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAClIH,EAAA,CAAAC,cAAA,cAA8G;IAAAD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACrIH,EAAA,CAAAC,cAAA,cAA8G;IAAAD,EAAA,CAAAE,MAAA,yBAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;ADCnJ,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,MAAkB,EAAUC,OAAc;IAA1C,KAAAD,MAAM,GAANA,MAAM;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IACrD,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,MAAM,CAACG,KAAK,CAAC;MAC/BC,GAAG,EAAE,IAAI,CAACJ,MAAM,CAACK,OAAO,CAAC,EAAE,EAAEZ,UAAU,CAACa,OAAO,CAAC,CAACb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEd,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,EAACf,UAAU,CAACgB,QAAQ,CAAC,CAAC;KACxH,CAAC;EACJ;EACAC,SAASA,CAAA,GAAG;EAGZC,2BAA2BA,CAAA;IACzB,IAAI,CAACV,OAAO,CAACW,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;EAChD;EAAC,QAAAC,CAAA,G;qBAZUf,YAAY,EAAAJ,EAAA,CAAAoB,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAtB,EAAA,CAAAoB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAZrB,YAAY;IAAAsB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTzBhC,EAAA,CAAAC,cAAA,aAAgH;QAC5ED,EAAA,CAAAE,MAAA,iBAAU;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC9CH,EAAA,CAAAC,cAAA,cAAsF;QAAvBD,EAAA,CAAAkC,UAAA,oBAAAC,6CAAA;UAAA,OAAUF,GAAA,CAAAjB,SAAA,EAAW;QAAA,EAAC;QACjFhB,EAAA,CAAAC,cAAA,aAAgC;QACOD,EAAA,CAAAE,MAAA,YAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChDH,EAAA,CAAAoC,SAAA,eAAiN;QACjNpC,EAAA,CAAAqC,UAAA,IAAAC,4BAAA,kBAAkI;QAClItC,EAAA,CAAAqC,UAAA,IAAAE,4BAAA,kBAAqI;QACrIvC,EAAA,CAAAqC,UAAA,KAAAG,6BAAA,kBAAuI;QAC3IxC,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAoC,SAAA,gBAA+G;QACnHpC,EAAA,CAAAG,YAAA,EAAO;;;QATkCH,EAAA,CAAAyC,SAAA,GAAqB;QAArBzC,EAAA,CAAA0C,UAAA,cAAAT,GAAA,CAAAzB,OAAA,CAAqB;QAI/CR,EAAA,CAAAyC,SAAA,GAAyE;QAAzEzC,EAAA,CAAA0C,UAAA,SAAAT,GAAA,CAAAzB,OAAA,CAAAmC,QAAA,uBAAAV,GAAA,CAAAzB,OAAA,CAAAoC,QAAA,QAAAC,KAAA,CAAyE;QACzE7C,EAAA,CAAAyC,SAAA,GAA4E;QAA5EzC,EAAA,CAAA0C,UAAA,SAAAT,GAAA,CAAAzB,OAAA,CAAAmC,QAAA,wBAAAV,GAAA,CAAAzB,OAAA,CAAAoC,QAAA,UAAAC,KAAA,CAA4E;QAC5E7C,EAAA,CAAAyC,SAAA,GAA4E;QAA5EzC,EAAA,CAAA0C,UAAA,SAAAT,GAAA,CAAAzB,OAAA,CAAAmC,QAAA,wBAAAV,GAAA,CAAAzB,OAAA,CAAAoC,QAAA,UAAAC,KAAA,CAA4E"},"metadata":{},"sourceType":"module","externalDependencies":[]}