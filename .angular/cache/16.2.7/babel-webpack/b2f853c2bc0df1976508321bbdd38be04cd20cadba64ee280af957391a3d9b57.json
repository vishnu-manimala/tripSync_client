{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AddVehicleComponent {\n  static #_ = this.ɵfac = function AddVehicleComponent_Factory(t) {\n    return new (t || AddVehicleComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddVehicleComponent,\n    selectors: [[\"app-add-vehicle\"]],\n    decls: 27,\n    vars: 0,\n    consts: [[1, \"flex\", \"flex-col\", \"justify-center\", \"md:justify-start\", \"my-auto\", \"mt-3\", \"md:pt-0\", \"px-8\", \"md:px-24\", \"lg:px-32\", \"w-11/12\", \"sm:w-full\", \"md:w-2/3\", \"text-cyan-300\"], [1, \"text-center\", \"text-3xl\"], [1, \"flex\", \"flex-col\", \"md:pt-8\"], [1, \"flex\", \"flex-col\", \"pt-1\"], [\"for\", \"ve\", 1, \"text-lg\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"placeholder\", \"John Smith\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"phone\", 1, \"text-lg\"], [\"type\", \"number\", \"id\", \"phone\", \"formControlName\", \"phone\", \"placeholder\", \"Contact Number\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"email\", 1, \"text-lg\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"your@email.com\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"confirm-password\", 1, \"text-lg\"], [\"type\", \"password\", \"id\", \"confirm-password\", \"formControlName\", \"confirm_password\", \"placeholder\", \"Password\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"mt-1\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"type\", \"submit\", \"value\", \"Register\", 1, \"bg-black\", \"text-white\", \"font-bold\", \"text-lg\", \"hover:bg-gray-700\", \"p-2\", \"mt-2\", \"rounded\"], [1, \"text-center\", \"text-red-950\"]],\n    template: function AddVehicleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\", 1);\n        i0.ɵɵtext(2, \"Vehicle Details.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Contact number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n        i0.ɵɵtext(14, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 3)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 12);\n        i0.ɵɵtext(22, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 14);\n        i0.ɵɵelementStart(25, \"span\", 15);\n        i0.ɵɵtext(26, \"Something went wrong!!\");\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AddVehicleComponent","_","_2","selectors","decls","vars","consts","template","AddVehicleComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\user\\vehicles\\add-vehicle\\add-vehicle.component.ts","C:\\Users\\asus\\Desktop\\Share N Go\\client\\src\\app\\views\\user\\vehicles\\add-vehicle\\add-vehicle.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.css']\n})\nexport class AddVehicleComponent {\n\n}\n","<div class=\"flex flex-col justify-center md:justify-start my-auto mt-3 md:pt-0 px-8 md:px-24 lg:px-32 w-11/12 sm:w-full md:w-2/3 text-cyan-300\">\n    <p class=\"text-center text-3xl\">Vehicle Details.</p>\n    <form class=\"flex flex-col  md:pt-8\" >\n\n    <!-- </form> [formGroup]=\"registerForm\" (submit)=\"registerSubmit()\" > -->\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"ve\" class=\"text-lg\">Name</label>\n            <input type=\"text\" id=\"name\" formControlName=\"name\" placeholder=\"John Smith\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','name')&& registerForm.controls['name'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 col-12\">*Name is required</span> -->\n        </div>\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"phone\" class=\"text-lg\">Contact number</label>\n            <input type=\"number\" id=\"phone\" formControlName=\"phone\" placeholder=\"Contact Number\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Phone Number is required</span>\n                            <span *ngIf=\"registerForm.hasError('pattern','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid Phone number</span>\n                            <span *ngIf=\"registerForm.hasError('minLength','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span>\n                            <span *ngIf=\"registerForm.hasError('maxLength','phone')&& registerForm.controls['phone'].dirty\"\n                            class=\"text-danger text-center ps-2 pt-2 \">*Not a valid phone number</span> -->\n        </div>\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"email\" class=\"text-lg\">Email</label>\n            <input type=\"email\" id=\"email\" formControlName=\"email\" placeholder=\"your@email.com\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','email')&& registerForm.controls['email'].dirty\"\n                                class=\"text-danger text-center ps-2 pt-2 \">*Email is required</span>\n                                <span *ngIf=\"registerForm.hasError('email','email')&& registerForm.controls['email'].dirty\"\n                                class=\"text-danger text-center ps-2 pt-2 \">*Enter a valid email</span> -->\n        </div>\n\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"password\" class=\"text-lg\">Password</label>\n            <input type=\"password\" id=\"password\" formControlName=\"password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.hasError('required','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Password is required</span>\n            <span *ngIf=\"registerForm.hasError('pattern','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Must contain at least one number and one uppercase,lowercase, special letter</span>\n            <span *ngIf=\"registerForm.hasError('minLength','password')&& registerForm.controls['password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Minimum 8 characters</span> -->\n        </div>\n\n        <div class=\"flex flex-col pt-1\">\n            <label for=\"confirm-password\" class=\"text-lg\">Confirm Password</label>\n            <input type=\"password\" id=\"confirm-password\" formControlName=\"confirm_password\" placeholder=\"Password\" class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mt-1 leading-tight focus:outline-none focus:shadow-outline\" />\n            <!-- <span *ngIf=\"registerForm.get('confirm_password')?.hasError('confirmPasswordValidator')\"\n            class=\"text-danger text-center ps-2 pt-2 \">*Password is not matching</span>\n            <span *ngIf=\"registerForm.hasError('required','confirm_password')&& registerForm.controls['confirm_password'].dirty\"\n            class=\"text-danger text-center ps-2 pt-2 \">*confirm  Password is required</span> -->\n        </div>\n\n        <input type=\"submit\"  value=\"Register\" class=\"bg-black text-white font-bold text-lg hover:bg-gray-700 p-2 mt-2 rounded\" />\n        <span class=\"text-center text-red-950\" >Something went wrong!!</span>\n    </form>\n   \n</div>"],"mappings":";AAOA,OAAM,MAAOA,mBAAmB;EAAA,QAAAC,CAAA,G;qBAAnBD,mBAAmB;EAAA;EAAA,QAAAE,EAAA,G;UAAnBF,mBAAmB;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPhCE,EAAA,CAAAC,cAAA,aAAgJ;QAC5GD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QACpDH,EAAA,CAAAC,cAAA,cAAsC;QAIED,EAAA,CAAAE,MAAA,WAAI;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5CH,EAAA,CAAAI,SAAA,eAAuN;QAG3NJ,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,aAAgC;QACOD,EAAA,CAAAE,MAAA,sBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzDH,EAAA,CAAAI,SAAA,gBAA+N;QASnOJ,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAC,cAAA,cAAgC;QACOD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAChDH,EAAA,CAAAI,SAAA,gBAA8N;QAKlOJ,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,cAAgC;QACUD,EAAA,CAAAE,MAAA,gBAAQ;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtDH,EAAA,CAAAI,SAAA,iBAAiO;QAOrOJ,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAC,cAAA,cAAgC;QACkBD,EAAA,CAAAE,MAAA,wBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACtEH,EAAA,CAAAI,SAAA,iBAAiP;QAKrPJ,EAAA,CAAAG,YAAA,EAAM;QAENH,EAAA,CAAAI,SAAA,iBAA0H;QAC1HJ,EAAA,CAAAC,cAAA,gBAAwC;QAAAD,EAAA,CAAAE,MAAA,8BAAsB;QAAAF,EAAA,CAAAG,YAAA,EAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}